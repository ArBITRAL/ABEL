component Man
	  attributes: id, partner, m1, m2, pw1, pw2, c, bl, send, counter, n, n2, n3, n4
  	  observables: partner
	  behaviour:
		let {
		Q1 :=  <counter = 0>('q1', this.id, this.pw1, this.pw2)@(id notin this.bl).[counter := counter + |bl|]Q11

		Q11 := <counter < n>(x = 'interest')(x).[c := c + 1, counter:= counter + 1]Q11 +
		       <counter < n>(x = 'uninterest')(x).[counter := counter + 1]Q11

       		Q2 := <counter = n and c = |bl|>('q2', this.id, this.pw1, this.pw2)@(id notin this.bl).[counter := counter + |bl|]Q22

		Q22 := <counter < n2>(x = 'interest')(x).[c := c + 1, counter:= counter + 1]Q22
		     +
		      <counter < n2>(x = 'uninterest')(x).[counter := counter + 1]Q22

		Q3 :=  <counter = n2 and c = |bl|>('q3', this.id, this.pw1, this.pw2)@(id notin this.bl).[counter := counter + |bl|]Q33

		Q33 := <counter < n3>(x = 'interest')(x).[c := c + 1, counter:= counter + 1]Q33 +
		       <counter < n3>(x = 'uninterest')(x).[counter := counter + 1]Q33

		Q4 := <counter = n3 and c = |bl|>()@(false).[counter := counter + 1]nil

	       	    P := <counter = n and c > |bl| and partner = 0 and send = 0>('propose', this.id, this.m1, this.m2)@(w1 = this.pw1 and w2 = this.pw2 and id notin this.bl).[send := 1]P
		       +
		         <counter = n2 and c > |bl| and partner = 0 and send = 0>('propose', this.id, this.m1, this.m2)@(w1 = this.pw1 and id notin this.bl).[send := 1]P
		       +
		      <counter = n3 and c > |bl| and partner = 0 and send = 0>('propose', this.id, this.m1, this.m2)@(w2 = this.pw2 and id notin this.bl).[send := 1]P
		       +
		      <counter = n4 and send = 0 and n > |bl| and partner = 0>('propose', this.id, this.m1, this.m2)@(id notin this.bl).[send := 1]P

		    A := (x = 'yes')(x,y).H |^1 A
		    H := <partner = 0>('confirm')@(id = $y).[partner := $y]A
		          +
		           <partner > 0>('toolate')@(id = $y).A

		    R := (x = 'bye')(x,y).[partner := 0, bl := bl ++ [$y], send := 0]R
			  +
			  (x = 'no')(x,y).[bl := bl ++ [$y], send := 0]R

		   }
	        init  Q1 | Q2 | Q3 | Q4 | P | R | A
end

component Woman
	  attributes: id, partner, w1, w2, pm1, pm2, cm1, cm2, bl, lock
  	  observables: partner
	  behaviour:
		let {
		    P1 := (x = 'q1')(x,y,z,t).H1 |^1 P1
		    P2 := (x = 'q2')(x,y,z,t).H2 |^1 P2
		    P3 := (x = 'q3')(x,y,z,t).H3 |^1 P3

		   H1 := <$z = w1 and $t = w2>('interest')@(id = $y).P1 + <not ($z = w1 and $t = w2)>('uninterest')@(id = $y).P1

	           H2 := <$z = w1>('interest')@(id = $y).P2 + <not ($z = w1)>('uninterest')@(id = $y).P2

		   H3 := <$t = w2>('interest')@(id = $y).P2 + <not ($t = w2)>('uninterest')@(id = $y).P3

		    W := (x = 'propose' and id notin this.bl)(x,y,z,t).[bl := bl ++ [$y]](R + A) |^1 W

  		    A := <(partner = 0 or ($z = pm1 and cm1 /= pm1) or ($z = cm1 and $t = pm2 and cm2 /= pm2)) and lock = 0>('yes',this.id)@(id = $y).[lock := 1]A1

		    R := <not (partner = 0 or ($z = pm1 and cm1 /= pm1) or ($z = cm1 and $t = pm2 and cm2 /= pm2))>('no', this.id)@(id = $y).W

	            A1 := (x = 'confirm')(x).Bye + (x = 'toolate')(x).[lock := 0, bl := bl -- [$y]]W

		    Bye := ('bye',this.id)@(id = this.partner).[partner := $y, cm1 := $z, cm2 := $t, lock := 0]W
		   }
	        init P1 | P2 |  P3 | W
end

C1 : Man (id -> 1, m1 -> 0, m2 -> 0, pw1 -> 0, pw2 -> 0, c -> 0, counter -> 0, n -> 2, n2 -> 4, n3 -> 6, n4 -> 7)
C2 : Man (id -> 2, m1 -> 0, m2 -> 1, pw1 -> 0, pw2 -> 0, c -> 0, counter -> 0, n -> 2, n2 -> 4, n3 -> 6, n4 -> 7)
C3 : Woman (id -> 3, w1 -> 0, w2 -> 0, pm1 -> 0, pm2 -> 0, cm1 -> -1, cm2 -> -1, lock -> 0)
C4 : Woman (id -> 4, w1 -> 0, w2 -> 0, pm1 -> 0, pm2 -> 0, cm1 -> -1, cm2 -> -1, lock -> 0)
